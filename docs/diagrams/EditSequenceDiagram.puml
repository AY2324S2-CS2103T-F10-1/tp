@startuml
!include style.puml
skinparam ArrowFontStyle plain

box Logic LOGIC_COLOR_T1
participant ":LogicManager" as LogicManager LOGIC_COLOR
participant ":AddressBookParser" as AddressBookParser LOGIC_COLOR
participant ":EditCommandParser" as EditCommandParser LOGIC_COLOR
participant "a:EditCommand" as EditCommand LOGIC_COLOR
participant "r:CommandResult" as CommandResult LOGIC_COLOR
participant "d:EditPersonDescriptor" as EditPersonDescriptor LOGIC_COLOR
end box

box Model MODEL_COLOR_T1
participant "m:Model" as Model MODEL_COLOR
end box
[-> LogicManager : execute("edit 1 w\WB")
activate LogicManager
LogicManager -> AddressBookParser : parseCommand("edit 1 w\WB")
activate AddressBookParser

create EditCommandParser
AddressBookParser -> EditCommandParser
activate EditCommandParser

EditCommandParser --> AddressBookParser
deactivate EditCommandParser
AddressBookParser -> EditCommandParser : parse("1 w\WB")
activate EditCommandParser

create EditPersonDescriptor
EditCommandParser -> EditPersonDescriptor
activate EditPersonDescriptor

EditPersonDescriptor --> EditCommandParser : d
deactivate EditPersonDescriptor

create EditCommand
EditCommandParser -> EditCommand : EditCommand(1, d)
activate EditCommand

EditCommand --> EditCommandParser : a
deactivate EditCommand

EditCommandParser --> AddressBookParser : a
deactivate EditCommandParser
EditCommandParser -[hidden]-> AddressBookParser
destroy EditCommandParser

AddressBookParser --> LogicManager : a
deactivate AddressBookParser

LogicManager -> EditCommand : execute(model)
activate EditCommand
EditCommand -> Model : setPerson(1, newPerson)
activate Model

Model --> EditCommand
deactivate Model

create CommandResult
EditCommand -> CommandResult
activate CommandResult

CommandResult --> EditCommand : r
deactivate CommandResult

EditCommand --> LogicManager : r
deactivate EditCommand

[<--LogicManager
deactivate LogicManager
@enduml
